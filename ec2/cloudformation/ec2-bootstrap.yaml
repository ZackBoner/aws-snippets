AWSTemplateFormatVersion: 2010-09-09
Description: This template creates a bootstrapped EC2 instance.
Parameters:
  KeyName:
    Description: Select an existing EC2 KeyPair for SSH access.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Select an existing EC2 KeyPair.
  SecurityGroup:
    Description: Select an existing EC2 Security group.
    Type: 'AWS::EC2::SecurityGroup::GroupName'

Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - Ref: SecurityGroup
      InstanceType: t2.micro
      AvailabilityZone: us-east-1a
      ImageId: ami-026b57f3c383c2eec
      UserData:
        Fn::Base64: 
          !Sub |
          #!/bin/bash -xe
          yum update -y
          yum install docker -y
          systemctl enable docker && systemctl start docker
          docker run -d -p 8080:80 uvarc/accord-demo:nsf
          curl -O https://gist.githubusercontent.com/nmagee/262d35eefa30b6fdfb2c61068c24046f/raw/2988321b76f06af08fd7df22a31ec104da35bd69/volume2.sh
          /bin/bash volume2.sh
          HOST=`curl http://169.254.169.254/latest/meta-data/hostname`
          aws sqs send-message --region us-east-1 --queue-url "https://sqs.us-east-1.amazonaws.com/440848399208/incoming" --message-body "$HOST checking in"
    DeletionPolicy: Delete

Outputs:
  SecGrpID:
    Value: !Ref InstanceSecurityGroup
  InstanceID:
    Value: !Ref EC2Instance
  IP:
    Value: !GetAtt EC2Instance.PublicIp
  URL:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt
          - EC2Instance
          - PublicIp
        - ':8080/'